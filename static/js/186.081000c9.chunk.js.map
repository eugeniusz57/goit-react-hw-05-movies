{"version":3,"file":"static/js/186.081000c9.chunk.js","mappings":"6LAEaA,EAAS,kBACpB,SAAC,KAAD,CACEC,QAAQ,OACRC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAEC,WAAY,OAAQC,QAAS,QAASC,YAAa,QACnEC,aAAa,eAPK,C,mGC4CtB,UAvCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BH,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACHJ,IAGLG,EAAU,YACVE,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GACJR,EAAWQ,GACXJ,EAAU,SACX,IACAK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IACb,GAAE,CAACT,KAEF,UAAC,IAAD,WACc,YAAXE,IAAwB,SAAC,IAAD,KACzB,2BACe,WAAXA,GAAkC,YAAXA,IACvBJ,GACAA,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,mCAAWD,MACX,uBAAIC,MAFGF,EAKZ,IACkB,KAAb,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASkB,UACR,2EAKT,C,wLC5CKC,EAAQC,EAAQ,MAEtBD,EAAME,SAASC,QAAU,+BAEzB,IAAMC,EAAM,mCAECC,EAAgB,mCAAG,oGACRL,EAAMM,IAAN,sCAAyCF,IADjC,cACxBG,EADwB,yBAEvBA,EAAQC,KAAKC,SAFU,2CAAH,qDAKhBC,EAAc,mCAAG,WAAMC,GAAN,uFACNX,EAAMM,IAAN,+BACIF,EADJ,iCACgCO,EADhC,gCADM,cACtBJ,EADsB,yBAIrBA,EAAQC,KAAKC,SAJQ,2CAAH,sDAOdG,EAAmB,mCAAG,WAAMhB,GAAN,uFACXI,EAAMM,IAAN,gBAAmBV,EAAnB,oBAAiCQ,EAAjC,oBADW,cAC3BG,EAD2B,yBAE1BA,EAAQC,MAFkB,2CAAH,sDAKnBK,EAAe,mCAAG,WAAMjB,GAAN,uFACPI,EAAMM,IAAN,gBACXV,EADW,4BACWQ,EADX,oBADO,cACvBG,EADuB,yBAItBA,EAAQC,KAAKM,MAJS,2CAAH,sDAOf1B,EAAe,mCAAG,WAAMQ,GAAN,uFACPI,EAAMM,IAAN,gBACXV,EADW,4BACWQ,EADX,oBADO,cACvBG,EADuB,yBAItBA,EAAQC,KAAKC,SAJS,2CAAH,qD","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","fetchAPI.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <Dna\n    visible=\"true\"\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"dna-loading\"\n    wrapperStyle={{ marginLeft: 'auto', display: 'block', marginRight: 'auto' }}\n    wrapperClass=\"dna-wrapper\"\n  />\n);\n","import { Box } from '../Box';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getMovieReviews } from '../../fetchAPI';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const { moviesId } = useParams();\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (!moviesId) {\n      return;\n    }\n    setStatus('pending');\n    getMovieReviews(moviesId)\n      .then(res => {\n        setReviews(res);\n        setStatus('resolv');\n      })\n      .catch(err => console.error(err));\n  }, [moviesId]);\n  return (\n    <Box>\n      {status === 'pending' && <Loader />}\n      <ul>\n        {(status === 'resolv' || status === 'pending') &&\n          reviews &&\n          reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <p>Author {author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        {reviews?.length === 0 && (\n          <div>We don't have any reviews for this movie</div>\n        )}\n      </ul>\n    </Box>\n  );\n};\n\nexport default Reviews;\n","const axios = require('axios');\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY = '025e6ba837c180b1375a1753437eaffc';\n\nexport const getTrendingFilms = async () => {\n  const respons = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return respons.data.results;\n};\n\nexport const getSearchFilms = async query => {\n  const respons = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return respons.data.results;\n};\n\nexport const getMovieDetailsById = async id => {\n  const respons = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return respons.data;\n};\n\nexport const getMovieCredits = async id => {\n  const respons = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return respons.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const respons = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return respons.data.results;\n};\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","marginLeft","display","marginRight","wrapperClass","useState","reviews","setReviews","moviesId","useParams","status","setStatus","useEffect","getMovieReviews","then","res","catch","err","console","error","map","id","author","content","length","axios","require","defaults","baseURL","KEY","getTrendingFilms","get","respons","data","results","getSearchFilms","query","getMovieDetailsById","getMovieCredits","cast"],"sourceRoot":""}